<div class="auth-container">
  <h1 class="title">Вход</h1>
  <form id="loginForm">
    <div class="form-group">
      <input type="text" id="formLogin" name="login" placeholder="Логин" class="form-input" />
    </div>

    <div class="form-group">
      <input type="password" id="formPassword" name="password" placeholder="Пароль" class="form-input" />
    </div>

    <!-- Блок для отображения ошибок -->
    <div id="errorMessage" class="error-message" style="display: none;"></div>

    <button type="submit" class="btn btn-primary btn-block">Войти</button>
  </form>
</div>

<script>
  const loginForm = document.querySelector("#loginForm");
  const loginField = loginForm.querySelector("#formLogin");
  const passwordField = loginForm.querySelector("#formPassword");
  const errorMessage = document.querySelector("#errorMessage");

  loginForm.addEventListener("submit", async (e) => {
    e.preventDefault(); // Предотвращаем стандартное поведение формы

    // Сбрасываем предыдущие ошибки
    errorMessage.style.display = "none";
    errorMessage.textContent = "";
    loginField.classList.remove("error");
    passwordField.classList.remove("error");

    // Проверка на пустые поля
    if (!loginField.value.trim()) {
      showError("Пожалуйста, введите логин", loginField);
      return;
    }

    if (!passwordField.value.trim()) {
      showError("Пожалуйста, введите пароль", passwordField);
      return;
    }

    try {
      const res = await fetch("/login", {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify({
          login: loginField.value,
          password: passwordField.value // Исправлено: было passwordField: loginField.password
        })
      });

      const data = await res.json();

      if (data.status === "success") {
        window.location.href = '/data';
      } else {
        // Обработка ошибки от сервера
        showError(data.message || "Неверный логин или пароль");
      }
    } catch (e) {
      console.log(e);
      showError("Произошла ошибка при подключении к серверу");
    }
  });

  function showError(message, field = null) {
    errorMessage.textContent = message;
    errorMessage.style.display = "block";

    if (field) {
      field.classList.add("error");
      field.focus();
    }
  }
</script>

<style>
  body {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    margin: 0;
    font-family: Arial, sans-serif;
  }

  .auth-container {
    width: 300px;
    padding: 20px;
    border: 1px solid #ddd;
    border-radius: 5px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  }

  .title {
    text-align: center;
    margin-bottom: 20px;
  }

  .form-group {
    margin-bottom: 15px;
  }

  .form-input {
    width: 100%;
    padding: 10px;
    border: 1px solid #ddd;
    border-radius: 4px;
    box-sizing: border-box;
  }

  .form-input.error {
    border-color: #ff4444;
  }

  .btn {
    padding: 10px;
    background-color: #4caf50;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    width: 100%;
  }

  .btn:hover {
    background-color: #4caf50;
  }

  .error-message {
    color: #ff4444;
    margin-bottom: 15px;
    padding: 10px;
    background-color: #ffebee;
    border-radius: 4px;
    display: none;
  }
</style>
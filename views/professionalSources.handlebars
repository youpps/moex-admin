<div class="container">
    <div class="nav">
        <a href="/upload" class="nav-link">Загрузить файл</a>
        <a href="/data" class="nav-link">Файлы</a>
        <a href="/bot-users" class="nav-link">Пользователи бота</a>

        <button class="nav-link nav-link_button" id="logout">Выйти</button>
    </div>

    <h1 class="title">Список профессиональных источников</h1>
    <table class="table">
        <thead>
            <tr>
                <th>Ссылка</th>
                <th>Дата создания</th>
                <th>Действия</th>

            </tr>
        </thead>
        <tbody>
            {{#each professionalSources}}
            <tr data-source-link="{{this.link}}">
                <td>{{this.link}}</td>

                <td>{{this.createdAt}}</td>

                <td>
                    <button class="btn-delete" data-source-link="{{this.link}}">Удалить</button>
                </td>
            </tr>
            {{/each}}
        </tbody>
    </table>

    <button id="createSource" class="btn btn-primary">Создать профессиональный источник</button>
</div>

<script>
    // Добавляем обработчики для кнопок удаления
    document.querySelectorAll('.btn-delete').forEach(button => {
        button.addEventListener('click', function () {
            const link = this.getAttribute('data-source-link');

            if (confirm('Вы уверены, что хотите удалить этого источника?')) {
                fetch('/professional-sources/delete', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ link })
                })
                    .then(res => res.json())
                    .then(res => {
                        if (res.status === "success") {
                            // Удаляем строку из таблицы
                            const row = document.querySelector(`tr[data-source-link="${link}"]`);
                            if (row) {
                                row.remove();
                                alert('Источник успешно удален!');
                            }
                        } else {
                            alert('Произошла ошибка при удалении источника');
                        }
                    })
                    .catch(error => {
                        console.error('Ошибка:', error);
                        alert('Произошла ошибка при удалении источника');
                    });
            }
        });
    });
</script>

<script>
    document.getElementById("createSource").addEventListener("click", () => {
        const link = prompt("Введите ссылку. Она должна быть уникальной");

        if (!link) {
            alert("Ссылка не заполнена");
            return;
        }

        fetch('/professional-sources/create', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ link })
        })
            .then(res => res.json())
            .then(res => {
                if (res.status === "success" && res.data) {
                    const newSource = res.data;
                    const tbody = document.querySelector('tbody');

                    // Форматируем дату в нужный формат
                    const createdAt = new Date(newSource.createdAt);
                    const formattedDate = `${createdAt.getFullYear()}.${String(createdAt.getMonth() + 1).padStart(2, '0')}.${String(createdAt.getDate()).padStart(2, '0')} ${String(createdAt.getHours()).padStart(2, '0')}:${String(createdAt.getMinutes()).padStart(2, '0')}`;

                    const newRow = document.createElement('tr');
                    newRow.setAttribute('data-source-link', newSource.link);

                    newRow.innerHTML = `
                        <td>${newSource.link}</td>
                        <td>${formattedDate}</td>

                        <td>
                            <button class="btn-delete" data-source-link="${newSource.link}">Удалить</button>
                        </td>
                    `;

                    tbody.appendChild(newRow);

                    // Добавляем обработчик для новой кнопки удаления
                    newRow.querySelector('.btn-delete').addEventListener('click', function () {
                        const link = this.getAttribute('data-source-link');

                        if (confirm('Вы уверены, что хотите удалить этого источника?')) {
                            fetch('/professional-sources/delete', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify({ link })
                            })
                                .then(res => res.json())
                                .then(res => {
                                    if (res.status === "success") {
                                        newRow.remove();
                                        alert('Источник успешно удален!');
                                    } else {
                                        alert('Произошла ошибка при удалении источника');
                                    }
                                })
                                .catch(error => {
                                    console.error('Ошибка:', error);
                                    alert('Произошла ошибка при удалении источника');
                                });
                        }
                    });

                    alert('Источник успешно создан!');
                } else {
                    alert('Произошла ошибка при создании источника');
                }
            })
            .catch(error => {
                console.error('Ошибка:', error);
                alert('Произошла ошибка при создании источника');
            });
    });
</script>